{"ast":null,"code":"import _objectSpread from\"C:\\\\MyProjects\\\\portfolio-website\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import React from'react';import ReactDOM from'react-dom';import'./index.css';import App from'./App';import{transitions,positions,Provider as AlertProvider}from'react-alert';import*as serviceWorker from'./serviceWorker';var options={// you can also just use 'bottom center'\nposition:positions.CENTER,timeout:10000,offset:'30px',// you can also just use 'scale'\ntransition:transitions.FADE};var customAlertStyle={width:'400px',borderRadius:'10px',backgroundColor:'#333333',color:'white',transformText:'none',padding:'1em',paddingLeft:'2em',display:'flex',flexDirection:'column',alignItems:'center',justifyContent:'center',textAlign:'left'};var closeButtonStyle={backgroundColor:'#333333',color:'white',border:'none',width:'100px',marginTop:'20px'};var OtherAlertTemplate=function OtherAlertTemplate(_ref){var style=_ref.style,options=_ref.options,message=_ref.message,close=_ref.close;return/*#__PURE__*/React.createElement(\"div\",{style:_objectSpread(_objectSpread({},style),customAlertStyle)},message,/*#__PURE__*/React.createElement(\"button\",{style:closeButtonStyle,onClick:close},\"Close\"));};ReactDOM.render(/*#__PURE__*/React.createElement(React.StrictMode,null,/*#__PURE__*/React.createElement(AlertProvider,Object.assign({template:OtherAlertTemplate},options),/*#__PURE__*/React.createElement(App,null))),document.getElementById('root'));// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();","map":{"version":3,"sources":["C:/MyProjects/portfolio-website/src/index.js"],"names":["React","ReactDOM","App","transitions","positions","Provider","AlertProvider","serviceWorker","options","position","CENTER","timeout","offset","transition","FADE","customAlertStyle","width","borderRadius","backgroundColor","color","transformText","padding","paddingLeft","display","flexDirection","alignItems","justifyContent","textAlign","closeButtonStyle","border","marginTop","OtherAlertTemplate","style","message","close","render","document","getElementById","unregister"],"mappings":"4JAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,QAAP,KAAqB,WAArB,CACA,MAAO,aAAP,CACA,MAAOC,CAAAA,GAAP,KAAgB,OAAhB,CACA,OAASC,WAAT,CAAsBC,SAAtB,CAAiCC,QAAQ,GAAIC,CAAAA,aAA7C,KAAkE,aAAlE,CACA,MAAO,GAAKC,CAAAA,aAAZ,KAA+B,iBAA/B,CAEA,GAAMC,CAAAA,OAAO,CAAG,CACd;AACAC,QAAQ,CAAEL,SAAS,CAACM,MAFN,CAGdC,OAAO,CAAE,KAHK,CAIdC,MAAM,CAAE,MAJM,CAKd;AACAC,UAAU,CAAEV,WAAW,CAACW,IANV,CAAhB,CAQA,GAAMC,CAAAA,gBAAgB,CAAG,CACvBC,KAAK,CAAE,OADgB,CAEvBC,YAAY,CAAE,MAFS,CAGvBC,eAAe,CAAE,SAHM,CAIvBC,KAAK,CAAE,OAJgB,CAKvBC,aAAa,CAAE,MALQ,CAMvBC,OAAO,CAAE,KANc,CAOvBC,WAAW,CAAE,KAPU,CAQvBC,OAAO,CAAE,MARc,CASvBC,aAAa,CAAE,QATQ,CAUvBC,UAAU,CAAE,QAVW,CAWvBC,cAAc,CAAE,QAXO,CAYvBC,SAAS,CAAE,MAZY,CAAzB,CAeA,GAAMC,CAAAA,gBAAgB,CAAG,CACvBV,eAAe,CAAE,SADM,CAEvBC,KAAK,CAAE,OAFgB,CAGvBU,MAAM,CAAE,MAHe,CAIvBb,KAAK,CAAE,OAJgB,CAKvBc,SAAS,CAAE,MALY,CAAzB,CAQA,GAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,UAAGC,CAAAA,KAAH,MAAGA,KAAH,CAAUxB,OAAV,MAAUA,OAAV,CAAmByB,OAAnB,MAAmBA,OAAnB,CAA4BC,KAA5B,MAA4BA,KAA5B,oBACzB,2BAAK,KAAK,gCAAMF,KAAN,EAAgBjB,gBAAhB,CAAV,EACGkB,OADH,cAEE,8BAAQ,KAAK,CAAEL,gBAAf,CAAiC,OAAO,CAAEM,KAA1C,UAFF,CADyB,EAA3B,CAOAjC,QAAQ,CAACkC,MAAT,cACE,oBAAC,KAAD,CAAO,UAAP,mBACI,oBAAC,aAAD,gBAAe,QAAQ,CAAEJ,kBAAzB,EAAiDvB,OAAjD,eACI,oBAAC,GAAD,MADJ,CADJ,CADF,CAME4B,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CANF,EASA;AACA;AACA;AACA9B,aAAa,CAAC+B,UAAd","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { transitions, positions, Provider as AlertProvider } from 'react-alert'\nimport * as serviceWorker from './serviceWorker';\n\nconst options = {\n  // you can also just use 'bottom center'\n  position: positions.CENTER,\n  timeout: 10000,\n  offset: '30px',\n  // you can also just use 'scale'\n  transition: transitions.FADE\n}\nconst customAlertStyle = {\n  width: '400px',\n  borderRadius: '10px',\n  backgroundColor: '#333333',\n  color: 'white',\n  transformText: 'none',\n  padding: '1em',\n  paddingLeft: '2em',\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n  justifyContent: 'center',\n  textAlign: 'left',\n}\n\nconst closeButtonStyle = {\n  backgroundColor: '#333333',\n  color: 'white',\n  border: 'none',\n  width: '100px',\n  marginTop: '20px',\n}\n\nconst OtherAlertTemplate = ({ style, options, message, close }) => (\n  <div style={{...style, ...customAlertStyle}}>\n    {message}\n    <button style={closeButtonStyle} onClick={close}>Close</button>\n  </div>\n)\n\nReactDOM.render(\n  <React.StrictMode>\n      <AlertProvider template={OtherAlertTemplate} {...options}>\n          <App />\n      </AlertProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}